matrix:
  include:
    - language: generic
      os: linux
      dist: xenial
      compiler: gcc-6
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - gfortran-6
            - libpython3.5
            - cython3
            - python3-numpy
      env: CC='gcc-6' CXX='g++-6' FC='gfortran-6' FORTRAN_STANDARD='2008' PYTHON_VERSION='3.5'

    - language: generic
      os: linux
      dist: xenial
      compiler: gcc-7
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - gfortran-7
            - libpython3.5
            - cython3
            - python3-numpy
      env: CC='gcc-7' CXX='g++-7' FC='gfortran-7' FORTRAN_STANDARD='2008' PYTHON_VERSION='3.5'

    - language: generic
      os: linux
      dist: xenial
      compiler: gcc-7
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - gfortran-7
            - cython3
            - libpython3.5
            - python3-numpy
      env: CC='gcc-7' CXX='g++-7' FC='gfortran-7' FORTRAN_STANDARD='2008' PYTHON_VERSION='3.5'

script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then pyenv root; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$PYTHON_VERSION" = "2.7" ]; then
        pyenv install 2.7.12;
        export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/2.7.12/include/python2.7;
        export PYTHON_LIBRARY=$(pyenv root)/versions/2.7.12/lib/libpython2.7.dylib;
        export PYTHON_EXECUTABLE=$(pyenv root)/versions/2.7.12/bin/python2.7;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ] && [ "$PYTHON_VERSION" = "3.5" ]; then
        pyenv install 3.5.0;
        export PYTHON_INCLUDE_DIR=$(pyenv root)/versions/3.5.0/include/python3.5m;
        export PYTHON_LIBRARY=$(pyenv root)/versions/3.5.0/lib/libpython3.5m.a;
        export PYTHON_EXECUTABLE=$(pyenv root)/versions/3.5.0/bin/python3.5m;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        $PYTHON_EXECUTABLE -m pip install --upgrade pip;
        $PYTHON_EXECUTABLE -m pip install -r ${TRAVIS_BUILD_DIR}/python/requirements.txt;
    fi

  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        export PYTHON_EXECUTABLE=/usr/bin/python$PYTHON_VERSION;
        source /etc/lsb-release;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$PYTHON_VERSION" = "2.7" ]; then
        export PYTHON_INCLUDE_DIR=/usr/include/python2.7;
        export PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$PYTHON_VERSION" = "3.5" ]; then
        export PYTHON_INCLUDE_DIR=/usr/include/python3.5m;
        export PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$DISTRIB_CODENAME" = "trusty" ] && [ "$PYTHON_VERSION" = "2.7" ]; then
        sudo $PYTHON_EXECUTABLE -m pip install --upgrade pip;
        sudo $PYTHON_EXECUTABLE -m pip install -r ${TRAVIS_BUILD_DIR}/python/requirements.txt;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$DISTRIB_CODENAME" = "trusty" ] && [ "$PYTHON_VERSION" = "3.5" ]; then
        echo "Python 3.5 not supported on Ubuntu Trusty";
        exit 1;
    fi

  - ./travis.sh
  - python --version
  - pip install --user wheel
  - pip install --user setuptools
  - pip install --user numpy
  - python setup.py bdist_wheel

deploy:
  provider: pypi
  server: https://test.pypi.org
  user: __token__
  password:
    secure: n/n2gy3hE9MnCvhiXT9tLQQRwC5FBgVWt3jH49sXGqj0QYvb/OaqRON4iDNClAmEbegNRcxpMdDPI3Uig7OIFWjz+/rV7xEMpsMX1GUBqGTe0L4W1TvD9F1DEiiD8iz139lq8hZ9rqDn2q8mAvUelADqDS7h/LRUnWbqRv1LdyCCmg3ctd7x/yIf2jH79anSmsR3A9OZH6ciRDAcjy5pKwphw/0Xg66b6jzuzMupS22UUd1iYEcYJfG0aK8Ao3Q9PwpBJVqoLIlsDpk2I22KqM1KLLoJkSeI8wnTpxTtmad+4OrbhIBTaGA7Qy7JWVUfrx0LKnfNOnhwdqycc+QcQdMAhZcszzvR4Ckr+7lhJ5KphWMzkWizkR2hnTUNV/LUGZovKhX1NZ5wWX58nfryfupU0vTvxfyzdRLoL+l4ZtSA56772dY1K9A4HVNt7XI5WPUVe/zyVHnJBZiDC7HEywIbmfQIkj/e/q+DkS+v+j9uOq+B54hHHc9dcOJWKc0gaMvrSBgIvQsGUwSS7T6QWowYp30vN1I8GI2+OygZyH0ccX53a0alUeDwdeYFuB+A/gXygTC7/7LzYMsz7Bup2uiF9AohfOczRpKYphtTt6Hfcmn8TWWdQtyAlT0pXKPGszbzkYhvQ686LT4z4yFnj+uB7GxemtMWurI6lHEYRIo=
  on:
    all_branches: true



after_success:
  - if [[ -n "${COVERAGE}" ]]; then bash <(curl -s https://codecov.io/bash); fi

